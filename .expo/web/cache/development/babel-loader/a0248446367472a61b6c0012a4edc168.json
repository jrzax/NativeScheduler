{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/jordanzax/Scheduler/components/CourseList.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Course from \"./Course\";\nimport TermSelector from \"./TermSelector\";\nvar termMap = {\n  F: 'Fall',\n  W: 'Winter',\n  S: 'Spring'\n};\nvar terms = Object.values(termMap);\n\nvar getCourseTerm = function getCourseTerm(course) {\n  return termMap[course.id.charAt(0)];\n};\n\nvar CourseList = function CourseList(_ref) {\n  var courses = _ref.courses;\n\n  var _useState = useState('Fall'),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTerm = _useState2[0],\n      setSelectedTerm = _useState2[1];\n\n  var termCourses = courses.filter(function (course) {\n    return selectedTerm === getCourseTerm(course);\n  });\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(TermSelector, {\n    selectedTerm: selectedTerm,\n    setSelectedTerm: setSelectedTerm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    contentContainerStyle: styles.courseList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, termCourses.map(function (course) {\n    return React.createElement(Course, {\n      key: course.id,\n      course: course,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 37\n      }\n    });\n  })));\n};\n\nvar styles = StyleSheet.create({\n  courseList: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  }\n});\nexport default CourseList;","map":{"version":3,"sources":["/Users/jordanzax/Scheduler/components/CourseList.js"],"names":["React","useState","Course","TermSelector","termMap","F","W","S","terms","Object","values","getCourseTerm","course","id","charAt","CourseList","courses","selectedTerm","setSelectedTerm","termCourses","filter","styles","courseList","map","StyleSheet","create","flex","flexDirection","flexWrap","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,YAAP;AAEA,IAAMC,OAAO,GAAG;AAAEC,EAAAA,CAAC,EAAE,MAAL;AAAaC,EAAAA,CAAC,EAAE,QAAhB;AAA0BC,EAAAA,CAAC,EAAE;AAA7B,CAAhB;AACA,IAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcN,OAAd,CAAd;;AAEA,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,MAAM;AAAA,SAC1BR,OAAO,CAACQ,MAAM,CAACC,EAAP,CAAUC,MAAV,CAAiB,CAAjB,CAAD,CADmB;AAAA,CAA5B;;AAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAe;AAAA,MAAbC,OAAa,QAAbA,OAAa;;AAAA,kBAEQf,QAAQ,CAAC,MAAD,CAFhB;AAAA;AAAA,MAEzBgB,YAFyB;AAAA,MAEXC,eAFW;;AAIhC,MAAMC,WAAW,GAAGH,OAAO,CAACI,MAAR,CAAe,UAAAR,MAAM;AAAA,WAAIK,YAAY,KAAKN,aAAa,CAACC,MAAD,CAAlC;AAAA,GAArB,CAApB;AACA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAEK,YAA5B;AAA0C,IAAA,eAAe,EAAEC,eAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,UAAD;AAAY,IAAA,qBAAqB,EAAEG,MAAM,CAACC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIH,WAAW,CAACI,GAAZ,CAAgB,UAAAX,MAAM;AAAA,WAAI,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACC,EAApB;AAAwB,MAAA,MAAM,EAAED,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ;AAAA,GAAtB,CADJ,CAFF,CADF;AAOE,CAZJ;;AAcE,IAAMS,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,UAAU,EAAE;AACRI,IAAAA,IAAI,EAAE,CADE;AAERC,IAAAA,aAAa,EAAE,KAFP;AAGRC,IAAAA,QAAQ,EAAE,MAHF;AAIRC,IAAAA,UAAU,EAAE,QAJJ;AAKRC,IAAAA,cAAc,EAAE;AALR;AADmB,CAAlB,CAAf;AAUA,eAAef,UAAf","sourcesContent":["import React, {useState} from 'react';\nimport { StyleSheet, ScrollView, View} from 'react-native';\nimport Course from './Course';\nimport TermSelector from './TermSelector';\n\nconst termMap = { F: 'Fall', W: 'Winter', S: 'Spring'};\nconst terms = Object.values(termMap);\n\nconst getCourseTerm = course => (\n  termMap[course.id.charAt(0)]\n);\n\nconst CourseList = ({courses}) => {\n\n  const [selectedTerm, setSelectedTerm] = useState('Fall');\n\n  const termCourses = courses.filter(course => selectedTerm === getCourseTerm(course));\n  return(\n    <View>\n      <TermSelector selectedTerm={selectedTerm} setSelectedTerm={setSelectedTerm} />\n      <ScrollView contentContainerStyle={styles.courseList}>\n        { termCourses.map(course => <Course key={course.id} course={course} />) }\n      </ScrollView>\n    </View>\n  )};\n\n  const styles = StyleSheet.create({\n    courseList: {\n        flex: 1,\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n      },\n  });\n\n  export default CourseList;"]},"metadata":{},"sourceType":"module"}