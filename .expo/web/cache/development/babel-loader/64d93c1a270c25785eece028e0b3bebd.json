{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/jordanzax/Scheduler/components/TermSelector.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar TermButton = function TermButton(_ref) {\n  var term = _ref.term,\n      setSelectedTerm = _ref.setSelectedTerm,\n      isActive = _ref.isActive;\n  return React.createElement(TouchableOpacity, {\n    style: styles[isActive ? 'termButtonActive' : 'termButton'],\n    onPress: function onPress() {\n      return setSelectedTerm(term);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.termText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, term));\n};\n\nvar TermSelector = function TermSelector(_ref2) {\n  var selectedTerm = _ref2.selectedTerm;\n  return React.createElement(View, {\n    style: styles.termSelector,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, terms.map(function (term) {\n    return React.createElement(TermButton, {\n      key: term,\n      term: term,\n      isActive: term === selectedTerm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    });\n  }));\n};\n\nvar termButtonBase = {\n  flex: 1,\n  borderRadius: 5,\n  justifyContent: 'center',\n  alignItems: 'center',\n  margin: 10,\n  height: 40,\n  padding: 10,\n  minWidth: 90,\n  maxWidth: 90\n};\nvar styles = StyleSheet.create({\n  termSelector: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: 350\n  },\n  termButton: _objectSpread(_objectSpread({}, termButtonBase), {}, {\n    backgroundColor: '#4f9f64'\n  }),\n  termButtonActive: _objectSpread(_objectSpread({}, termButtonBase), {}, {\n    backgroundColor: '#105f25'\n  }),\n  termText: {\n    color: '#fff',\n    fontSize: 15\n  }\n});\nexport default TermSelector;","map":{"version":3,"sources":["/Users/jordanzax/Scheduler/components/TermSelector.js"],"names":["React","TermButton","term","setSelectedTerm","isActive","styles","termText","TermSelector","selectedTerm","termSelector","terms","map","termButtonBase","flex","borderRadius","justifyContent","alignItems","margin","height","padding","minWidth","maxWidth","StyleSheet","create","flexDirection","width","termButton","backgroundColor","termButtonActive","color","fontSize"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAEC,IAAF,QAAEA,IAAF;AAAA,MAAQC,eAAR,QAAQA,eAAR;AAAA,MAAyBC,QAAzB,QAAyBA,QAAzB;AAAA,SACf,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEC,MAAM,CAACD,QAAQ,GAAG,kBAAH,GAAwB,YAAjC,CAA/B;AACI,IAAA,OAAO,EAAE;AAAA,aAAMD,eAAe,CAACD,IAAD,CAArB;AAAA,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BJ,IAA/B,CAFF,CADe;AAAA,CAAnB;;AAOE,IAAMK,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAEC,YAAF,SAAEA,YAAF;AAAA,SACnB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIC,KAAK,CAACC,GAAN,CAAU,UAAAT,IAAI;AAAA,WACV,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,IAAjB;AAAuB,MAAA,IAAI,EAAEA,IAA7B;AACA,MAAA,QAAQ,EAAEA,IAAI,KAAKM,YADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAd,CAFJ,CADmB;AAAA,CAArB;;AAYA,IAAMI,cAAc,GAAG;AACrBC,EAAAA,IAAI,EAAE,CADe;AAErBC,EAAAA,YAAY,EAAE,CAFO;AAGrBC,EAAAA,cAAc,EAAE,QAHK;AAIrBC,EAAAA,UAAU,EAAE,QAJS;AAKrBC,EAAAA,MAAM,EAAE,EALa;AAMrBC,EAAAA,MAAM,EAAE,EANa;AAOrBC,EAAAA,OAAO,EAAE,EAPY;AAQrBC,EAAAA,QAAQ,EAAE,EARW;AASrBC,EAAAA,QAAQ,EAAE;AATW,CAAvB;AAYA,IAAMhB,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,YAAY,EAAE;AACZe,IAAAA,aAAa,EAAE,KADH;AAEZT,IAAAA,cAAc,EAAE,eAFJ;AAGZU,IAAAA,KAAK,EAAE;AAHK,GADiB;AAM/BC,EAAAA,UAAU,kCACPd,cADO;AAEVe,IAAAA,eAAe,EAAE;AAFP,IANqB;AAUjCC,EAAAA,gBAAgB,kCACXhB,cADW;AAEde,IAAAA,eAAe,EAAE;AAFH,IAViB;AAc/BrB,EAAAA,QAAQ,EAAE;AACRuB,IAAAA,KAAK,EAAE,MADC;AAERC,IAAAA,QAAQ,EAAE;AAFF;AAdqB,CAAlB,CAAf;AAoBA,eAAevB,YAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nconst TermButton = ({term, setSelectedTerm, isActive}) => (\n    <TouchableOpacity style={styles[isActive ? 'termButtonActive' : 'termButton']} \n        onPress={() => setSelectedTerm(term)}>\n      <Text style={styles.termText}>{term}</Text>\n    </TouchableOpacity>\n  );\n  \n  const TermSelector = ({selectedTerm}) => (\n    <View style={styles.termSelector}>\n      { \n        terms.map(term => (\n            <TermButton key={term} term={term} \n            isActive={term === selectedTerm}\n          />\n        ))\n      }\n    </View>\n  );\n  \n  const termButtonBase = {\n    flex: 1,\n    borderRadius: 5,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 10,\n    height: 40,\n    padding: 10,\n    minWidth: 90,\n    maxWidth: 90,\n  };\n\n  const styles = StyleSheet.create({\n    termSelector: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      width: 350,\n    },\n    termButton: {\n    ...termButtonBase,\n    backgroundColor: '#4f9f64'\n  },\n  termButtonActive: {\n    ...termButtonBase,\n    backgroundColor: '#105f25',\n  },\n    termText: {\n      color: '#fff',\n      fontSize: 15,\n    },\n  });\n  \n  export default TermSelector;"]},"metadata":{},"sourceType":"module"}