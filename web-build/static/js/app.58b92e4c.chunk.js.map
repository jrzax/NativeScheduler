{"version":3,"sources":["components/Course.js","components/TermSelector.js","utils/course.js","components/CourseSelector.js","components/CourseList.js","UserContext.js","components/Forms/colors.js","components/Forms/FormErrorMessage.js","components/Forms/FormTextInput.js","components/Forms/FormButton.js","components/Forms/FormSwitch.js","components/Form.js","components/Forms/Form.js","components/Forms/FormField.js","screens/CourseEditScreen.js","screens/ScheduleScreen.js","screens/CourseDetailScreen.js","App.js","web-build/register-service-worker.js"],"names":["courseButtonBase","flex","borderRadius","justifyContent","alignItems","margin","height","padding","minWidth","maxWidth","styles","StyleSheet","create","courseButton","backgroundColor","courseButtonSelected","courseButtonDisabled","courseText","color","fontSize","textAlign","Course","course","isDisabled","isSelected","select","view","TouchableOpacity","style","onPress","onLongPress","Text","id","slice","getCourseNumber","meets","termMap","F","W","S","terms","Object","values","TermButton","term","setSelectedTerm","isActive","termText","termButtonBase","termSelector","flexDirection","width","termButton","termButtonActive","TermSelector","selectedTerm","View","map","key","getCourseTerm","charAt","allDays","timesPat","timeConflict","course1","course2","days1","days","days2","some","day","includes","hours1","hours","hours2","Math","max","start","min","end","hasConflict","selected","filter","exec","match","hh1","mm1","hh2","mm2","addTimes","selection","courseList","flexWrap","CourseSelector","courses","useState","setSelected","toggle","x","CourseList","termCourses","UserContext","createContext","primary","secondary","black","white","ghostWhite","lightGrey","mediumGrey","red","FormErrorMessage","error","visible","errorText","marginLeft","Colors","marginBottom","fontWeight","FormTextInput","leftIcon","rightIcon","handlePasswordVisibility","otherProps","container","MaterialCommunityIcons","name","size","icon","TextInput","input","placeholderTextColor","rightIconStyles","marginVertical","marginRight","alignSelf","button","buttonText","textTransform","title","Form","props","children","initialValues","onSubmit","validationSchema","Fragment","Base","Field","useFormikContext","setFieldTouched","setFieldValue","errors","touched","value","onChangeText","text","onBlur","Button","handleSubmit","ErrorMessage","Switch","onChange","onValueChange","Yup","shape","required","matches","label","field","fieldContainer","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","CourseEditScreen","navigation","route","params","SafeAreaView","ScrollView","placeholder","autoCapitalize","autoFocus","Banner","bannerStyle","paddingTop","ScheduleScreen","user","useContext","canEdit","role","schedule","setSchedule","useEffect","a","async","fetch","response","ok","json","fetchSchedule","navigate","CourseDetailScreen","Stack","createStackNavigator","App","Provider","NavigationContainer","Navigator","Screen","component","options","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","console"],"mappings":"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","file":"static/js/app.58b92e4c.chunk.js","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, ViewBase } from 'react-native';\n\nconst getCourseNumber = course => (\n  course.id.slice(1)\n)\n\nconst Course = ({course, isDisabled, isSelected, select, view}) => (\n  <TouchableOpacity style={styles[isSelected ? 'courseButtonSelected' : isDisabled ? 'courseButtonDisabled' : 'courseButton']}\n      onPress={() => { if (!isDisabled) select(course); }}\n      onLongPress={()=> view(course)}>\n    <Text style={styles.courseText}>\n      {`CS ${getCourseNumber(course)}\\n${course.meets}`}\n    </Text>\n  </TouchableOpacity>\n);\n\nconst courseButtonBase = {\n  flex: 1,\n  borderRadius: 5,\n  justifyContent: 'center',\n  alignItems: 'center',\n  margin: 10,\n  height: 60,\n  padding: 10,\n  minWidth: 90,\n  maxWidth: 90,\n}\nconst styles = StyleSheet.create({\n  courseButton: {\n    ...courseButtonBase,\n    backgroundColor: '#66b0ff',\n  },\n  courseButtonSelected: {\n    ...courseButtonBase,\n    backgroundColor: '#004a99',\n  },\n  courseButtonDisabled:{\n    ...courseButtonBase,\n    backgroundColor: '#d3d3d3',\n  },\n  courseText:{\n    color: '#fff',\n    fontSize: 12,\n    textAlign: 'center',\n  },\n});\n\nexport default Course;","import React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nconst termMap = { F: 'Fall', W: 'Winter', S: 'Spring'};\nconst terms = Object.values(termMap);\n\nconst getCourseTerm = course => (\n  termMap[course.id.charAt(0)]\n);\n\nconst TermButton = ({term, setSelectedTerm, isActive}) => (\n    <TouchableOpacity style={styles[isActive ? 'termButtonActive' : 'termButton']} \n        onPress={() => setSelectedTerm(term)}>\n      <Text style={styles.termText}>{term}</Text>\n    </TouchableOpacity>\n  );\n  \n  const TermSelector = ({selectedTerm, setSelectedTerm}) => (\n    <View style={styles.termSelector}>\n      { \n        terms.map(term => (\n          <TermButton key={term} term={term} setSelectedTerm={setSelectedTerm}\n          isActive={term === selectedTerm}\n          />\n        ))\n      }\n    </View>\n  );\n  \n  const termButtonBase = {\n    flex: 1,\n    borderRadius: 5,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 10,\n    height: 40,\n    padding: 10,\n    minWidth: 90,\n    maxWidth: 90,\n  };\n\n  const styles = StyleSheet.create({\n    termSelector: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      width: 350,\n    },\n    termButton: {\n    ...termButtonBase,\n    backgroundColor: '#4f9f64'\n  },\n  termButtonActive: {\n    ...termButtonBase,\n    backgroundColor: '#105f25',\n  },\n    termText: {\n      color: '#fff',\n      fontSize: 15,\n    },\n  });\n  \n  export default TermSelector;","// getCourseTerm(course) => string\n//   given a course, returns the term the course is in\n//\n// getCourseNumber(course) => string\n//   given a course, returns its course number\n//\n// terms -- a variable set to the list of academic terms\nconst termMap = { F: 'Fall', W: 'Winter', S: 'Spring'};\nconst terms = Object.values(termMap);\n\n\nconst getCourseTerm = course => (\n  termMap[course.id.charAt(0)]\n);\n\nconst getCourseNumber = course => (\n  course.id.slice(1)\n)\n\n// addTimes(course) => void\n//   given a course with a meeting time, e.g., \"MTuWF 9:00-10:30\"\n//   adds a days value, e.g., [\"M\", \"Tu\", \"W\", \"F\"]\n//     and an hours value, e.g., { start: 540, end: 630 }, \n//     with start and end in minutes past midnight\n\nconst allDays = ['M', 'Tu', 'W', 'Th', 'F', 'Sa', 'Su'];\nconst timesPat = /(\\d\\d?):(\\d\\d) *[ -] *(\\d\\d?):(\\d\\d)/;\n\nconst addTimes = (course) => {\n  course.days = allDays.filter(day => course.meets.includes(day));\n\n  const [match, hh1, mm1, hh2, mm2] = timesPat.exec(course.meets);\n  if (match) {\n    course.hours = {\n      start: hh1 * 60 + mm1 * 1,\n      end: hh2 * 60 + mm2 * 1\n    }\n  };\n}\n\n// hasConflict(course, selected) => boolean\n//   given a course and list of courses\n//   returns true if course conflicts with any item in selected\n//\n// courseConflict(course1, course1) => boolean\n//   given two courses\n//   returns if they are not the same course, occur in the\n//     same quarter, have at least one day in common, and\n//     the start/end times overlap\n\nconst daysOverlap = (days1, days2) => (\n  days1 && days2 && days2.some(day => days1.includes(day))\n);\n\nconst hoursOverlap = (hours1, hours2) => (\n  hours1 && hours2 && Math.max(hours1.start, hours2.start) < Math.min(hours1.end, hours2.end)\n);\n\nconst timeConflict = (course1, course2) => (\n  daysOverlap(course1.days, course2.days) && hoursOverlap(course1.hours, course2.hours)\n);\n\nconst courseConflict = (course1, course2) => (\n  course1 !== course2\n  && getCourseTerm(course1) === getCourseTerm(course2)\n  && timeConflict(course1, course2)\n);\n\n// SIDE EFFECT: the first time a course is compared to other courses,\n// its meeting times are parsed and added, so that this work\n// doesn't need to be done again. Clear the days field if \n// changing meeting times.\nconst hasConflict = (course, selected) => {\n  if (!course.days) addTimes(course);\n  return selected.some(selection => courseConflict(course, selection))\n};\n\nexport { getCourseNumber, getCourseTerm, hasConflict, terms }","import React, {useState} from 'react';\nimport { StyleSheet, ScrollView, View} from 'react-native';\nimport Course from './Course';\nimport { getCourseNumber, getCourseTerm, hasConflict, terms } from '../utils/course';\n\nconst CourseSelector = ({courses, view}) => {\n    const [selected, setSelected] = useState([]);\n\n    const toggle = course => setSelected(selected => (\n        selected.includes(course) ? selected.filter(x => x !== course) : [...selected, course]\n      ));\n  \n    return (\n      <View style={styles.courseList}>\n        { \n          courses.map(course => (\n            <Course key={course.id} course={course} \n              select={toggle}\n              isDisabled={hasConflict(course, selected)}\n              isSelected={selected.includes(course)}\n              view={view}\n            />\n          ))\n        }\n      </View>\n    );\n  };\n\n  const styles = StyleSheet.create({\n    courseList: {\n        flex: 1,\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n      },\n  });\n\n  export default CourseSelector;","import React, {useState} from 'react';\nimport { StyleSheet, ScrollView, View} from 'react-native';\nimport Course from './Course';\nimport TermSelector from './TermSelector';\nimport CourseSelector from './CourseSelector';\n\nconst termMap = { F: 'Fall', W: 'Winter', S: 'Spring'};\nconst terms = Object.values(termMap);\n\nconst getCourseTerm = course => (\n  termMap[course.id.charAt(0)]\n);\n\nconst CourseList = ({courses, view}) => {\n\n  const [selectedTerm, setSelectedTerm] = useState('Fall');\n\n  const termCourses = courses.filter(course => selectedTerm === getCourseTerm(course));\n  return(\n    <View>\n      <TermSelector selectedTerm={selectedTerm} setSelectedTerm={setSelectedTerm} />\n      <CourseSelector courses={termCourses} view={view} />\n    </View>\n  )};\n\n  export default CourseList;","import { createContext } from 'react';\n\nconst UserContext = createContext();\n\nexport default UserContext;","export default {\n  primary: '#f57c00',\n  secondary: '#039be5',\n  black: '#222222',\n  white: '#ffffff',\n  ghostWhite: '#f8f8ff',\n  lightGrey: '#f9f9f9',\n  mediumGrey: '#6e6869',\n  red: '#fc5c65'\n};\n","import React from 'react';\nimport { StyleSheet, Text } from 'react-native';\n\nimport Colors from './colors';\n\nexport default function FormErrorMessage({ error, visible }) {\n  if (!error || !visible) {\n    return null;\n  }\n\n  return <Text style={styles.errorText}>{error}</Text>;\n}\n\nconst styles = StyleSheet.create({\n  errorText: {\n    marginLeft: 15,\n    color: Colors.red,\n    fontSize: 16,\n    marginBottom: 5,\n    fontWeight: '600'\n  }\n});\n","import React from 'react';\nimport { View, StyleSheet, TextInput, TouchableOpacity } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport Colors from './colors';\n\nexport default function FormTextInput({\n  leftIcon,\n  width = '100%',\n  rightIcon,\n  handlePasswordVisibility,\n  ...otherProps\n}) {\n  return (\n    <View style={[styles.container, { width }]}>\n      {leftIcon && (\n        <MaterialCommunityIcons\n          name={leftIcon}\n          size={20}\n          color={Colors.mediumGrey}\n          style={styles.icon}\n        />\n      )}\n      <TextInput\n        style={styles.input}\n        placeholderTextColor={Colors.mediumGrey}\n        {...otherProps}\n      />\n      {rightIcon && (\n        <TouchableOpacity onPress={handlePasswordVisibility}>\n          <MaterialCommunityIcons\n            name={rightIcon}\n            size={20}\n            color={Colors.mediumGrey}\n            style={styles.rightIconStyles}\n          />\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.lightGrey,\n    borderRadius: 25,\n    flexDirection: 'row',\n    padding: 15,\n    marginVertical: 10\n  },\n  icon: {\n    marginRight: 10\n  },\n  input: {\n    flex: 1,\n    width: '100%',\n    fontSize: 18,\n    color: Colors.black\n  },\n  rightIconStyles: {\n    alignSelf: 'center',\n    marginLeft: 10\n  }\n});\n","import React from 'react';\nimport { Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { useFormikContext } from 'formik';\n\nimport Colors from './colors';\n\nexport default function FormButton({ title, color = 'primary' }) {\n  const { handleSubmit, values } = useFormikContext();\n  const text = typeof title === 'function' ? title(values) : title;\n\n  return (\n    <TouchableOpacity\n      style={[styles.button, { backgroundColor: Colors[color] }]}\n      onPress={handleSubmit}\n    >\n      <Text style={styles.buttonText}>{text}</Text>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    marginVertical: 10,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 15,\n    width: '100%'\n  },\n  buttonText: {\n    color: Colors.white,\n    fontSize: 18,\n    fontWeight: '600',\n    textTransform: 'uppercase'\n  }\n});\n","import React from 'react';\nimport { StyleSheet, Switch, Text, View } from 'react-native';\nimport { useFormikContext } from 'formik';\n\nimport Colors from './colors';\n\nexport default function FormSwitch({name, title, onChange = x => x, ...otherProps}) {\n  const { values, setFieldValue } = useFormikContext();\n  const value = values[name];\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{title}</Text>\n      <Switch\n        value={value}\n        onValueChange={(value) => {\n          onChange(value);\n          setFieldValue(name, value);\n        }}\n        {...otherProps}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  title: {\n    color: Colors.white,\n    fontSize: 18,\n    fontWeight: '600',\n    marginRight: 5,\n  },\n});","\nimport Base from './Forms/Form';\nimport FormField from './Forms/FormField';\nimport FormButton from './Forms/FormButton';\nimport FormErrorMessage from './Forms/FormErrorMessage';\nimport FormSwitch from './Forms/FormSwitch';\n\nconst Form = props => Base(props);\n\nForm.Field = FormField;\nForm.Button = FormButton;\nForm.ErrorMessage = FormErrorMessage;\nForm.Switch = FormSwitch;\n\nexport default Form;\n\n","import React from 'react';\nimport { Formik } from 'formik';\n\nexport default function Form({\n  children,\n  initialValues,\n  onSubmit,\n  validationSchema\n}) {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {() => <React.Fragment>{children}</React.Fragment>}\n    </Formik>\n  );\n}\n","import React from 'react';\nimport { useFormikContext } from 'formik';\n\nimport FormErrorMessage from './FormErrorMessage';\nimport FormTextInput from './FormTextInput';\n\nexport default function FormField({ name, width, ...otherProps }) {\n  const {\n    setFieldTouched,\n    setFieldValue,\n    values,\n    errors,\n    touched\n  } = useFormikContext();\n\n  return (\n    <React.Fragment>\n      <FormTextInput\n        value={values[name]}\n        onChangeText={text => setFieldValue(name, text)}\n        onBlur={() => setFieldTouched(name)}\n        width={width}\n        {...otherProps}\n      />\n      <FormErrorMessage error={errors[name]} visible={touched[name]} />\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport * as Yup from 'yup';\nimport { SafeAreaView, ScrollView, StyleSheet, Text, View } from 'react-native';\nimport Form from '../components/Form';\n\nconst Field = ({label, value}) => {\n  return (\n    <View style={styles.fieldContainer}>\n      <Text style={styles.label}>{label}</Text>\n      <Text style={styles.field}>{value}</Text>\n    </View>\n  );\n};\n\nconst CourseEditScreen = ({navigation, route}) => {\n  const course = route.params.course;\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView>\n      <Form\n      validationSchema={validationSchema}\n      initialValues={{\n        id: course.id,\n        meets: course.meets,\n        title: course.title,\n      }}>\n          <Form.Field\n            name=\"id\"\n            leftIcon=\"identifier\"\n            placeholder=\"F110\"\n            autoCapitalize=\"none\"\n            autoFocus={true}\n          />\n          <Form.Field\n            name=\"meets\"\n            leftIcon=\"calendar-range\"\n            placeholder=\"MThu 12:00-13:50\"\n            autoCapitalize=\"none\"\n          />\n          <Form.Field\n            name=\"title\"\n            leftIcon=\"format-title\"\n            placeholder=\"Introduction to programming\"\n          />\n        </Form>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n    id: Yup.string()\n      .required()\n      .matches(/(F|W|S)\\d{3,}/, 'Must be a term and 3-digit number')\n      .label('ID'),\n    meets: Yup.string()\n      .required()\n      .matches(/(M|Tu|W|Th|F)+ +\\d\\d?:\\d\\d-\\d\\d?:\\d\\d/, 'Must be weekdays followed by start and end time')\n      .label('Meeting times'),\n    title: Yup.string()\n      .required()\n      .label('Title'),\n  });\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ccccb3'\n  },\n  field: {\n    height: 40,\n    width: 300,\n    padding: 5,\n    backgroundColor: 'white',\n  },\n  fieldContainer: {\n    marginBottom: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.23,\n    shadowRadius: 2.62,\n    elevation: 4,\n  },\n  label: {\n    fontWeight: 'bold',\n  }\n});\n\nexport default CourseEditScreen;","import React, {useState, useEffect, useContext} from 'react';\nimport { StyleSheet, Text, ScrollView, SafeAreaView, TouchableOpacity } from 'react-native';\nimport CourseList from '../components/CourseList';\nimport UserContext from '../UserContext';\nimport CourseEditScreen from './CourseEditScreen';\n\n\nconst termMap = { F: 'Fall', W: 'Winter', S: 'Spring'};\nconst terms = Object.values(termMap);\n\nconst getCourseTerm = course => (\n  termMap[course.id.charAt(0)]\n);\n\nconst ScheduleScreen = ({navigation}) => {\n  const user = useContext(UserContext);\n  const canEdit = user && user.role === 'admin';\n  const [schedule, setSchedule] = useState({title: '', courses: []})\n\n  const view = (course) => {\n    navigation.navigate(canEdit ? 'CourseEditScreen' : 'CourseDetailScreen', { course });\n  };\n\n  const url = 'https://courses.cs.northwestern.edu/394/data/cs-courses.php';\n\n  useEffect(() => {\n    const fetchSchedule =  async () => {\n      const response = await fetch(url);\n      if (!response.ok) throw response;\n      const json = await response.json();\n      setSchedule(json);\n    }\n    fetchSchedule();\n  }, []);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Banner title={schedule.title} />\n      <CourseList courses={schedule.courses} view={view}/>\n    </SafeAreaView>\n  );\n}\n\n\n\nconst Banner = ({title}) => (\n  <Text style={styles.bannerStyle}>{title || '[loading...]'}</Text>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 20,\n  },\n  bannerStyle: {\n    color: '#888',\n    fontSize: 32,\n  },\n});\n\nexport default ScheduleScreen;","import React from 'react';\nimport { SafeAreaView, ScrollView, StyleSheet, Text, View } from 'react-native';\n\nconst Field = ({label, value}) => {\n  return (\n    <View style={styles.fieldContainer}>\n      <Text style={styles.label}>{label}</Text>\n      <Text style={styles.field}>{value}</Text>\n    </View>\n  );\n};\n\nconst CourseDetailScreen = ({route}) => {\n  const course = route.params.course;\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView>\n        <Field label=\"ID\" value={course.id} />\n        <Field label=\"Meeting times\" value={course.meets} />\n        <Field label=\"Title\" value={course.title} />\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ccccb3'\n  },\n  field: {\n    height: 40,\n    width: 300,\n    padding: 5,\n    backgroundColor: 'white',\n  },\n  fieldContainer: {\n    marginBottom: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.23,\n    shadowRadius: 2.62,\n    elevation: 4,\n  },\n  label: {\n    fontWeight: 'bold',\n  }\n});\n\nexport default CourseDetailScreen;","import 'react-native-gesture-handler';\nimport React, {useState} from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport ScheduleScreen from './screens/ScheduleScreen';\nimport CourseDetailScreen from './screens/CourseDetailScreen';\nimport CourseEditScreen from './screens/CourseEditScreen';\nimport UserContext from './UserContext';\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  const [user, setUser] = useState({ role: 'admin'});\n  return (\n    <UserContext.Provider value={user}>\n      <NavigationContainer>\n        <Stack.Navigator> \n        <Stack.Screen name=\"ScheduleScreen\"\n            component={ScheduleScreen}\n            options={{ title: 'Schedule'}} \n          />\n          <Stack.Screen name=\"CourseDetailScreen\"\n            component={CourseDetailScreen}\n            options={{ title: 'Course detail'}} \n          />\n           <Stack.Screen name=\"CourseEditScreen\"\n            component={CourseEditScreen}\n            options={{ title: 'Course Editor'}} \n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </UserContext.Provider>\n  );\n};\n\nexport default App;","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}